# Modelos Paramétricos

{{< include _dados.qmd >}}

```{r}
formula = Surv(tempo, Obito) ~  Idade + 
                                ClasseFuncional +
                                Sincope +
                                FracaoEjecao +
                                RazaoTEI +
                                VolAEindexado
```

## Exponencial

```{r}
library(survival)
modeloExponencial <- survreg(formula, data = dados, dis = "exponential")
summary(modeloExponencial)
```

## LogNormal

```{r}
modeloLogNormal <- survreg(formula, data = dados, dis = "lognormal")
summary(modeloLogNormal)
```

## Weibull

```{r}
modeloWeibull <- survreg(formula, data = dados, dis = "weibull")
summary(modeloWeibull)
```

Nos três modelos propostos a covariável Síncope não é significativa, assim, reformulamos os modelos excluíndo esta covariável.

```{r}
formula = Surv(tempo, Obito) ~  Idade + 
                                ClasseFuncional +
                                FracaoEjecao +
                                RazaoTEI +
                                VolAEindexado
```

Ajustando novamente os modelos, temos:

```{r}
modeloExponencial <- survreg(formula, data = dados, dis = "exponential")
modeloLogNormal <- survreg(formula, data = dados, dis = "lognormal")
modeloWeibull <- survreg(formula, data = dados, dis = "weibull")
```

## Seleção do modelo paramétrico

Utilizando AIC como critério para seleção do modelo, temos:

| Modelo      | AIC                                   |
|---          |---                                    |
| Exponencial | `r extractAIC(modeloExponencial)[2]`  |
| Log-Normal  | `r extractAIC(modeloLogNormal)[2]`    |
| Weibull     | `r extractAIC(modeloWeibull)[2]`      |

: AICs


Devido ao menor AIC, o modelo exponencial foi o escolhido.

```{r}
summary(modeloExponencial)
```

Validando a adequação do modelo, temos:

```{r, echo=FALSE}
#| output: false

library(gamlss)
library(survival)
fit_GG2 <- gamlss(Surv(tempo, Obito) ~ Idade + ClasseFuncional + FracaoEjecao + RazaoTEI +
                                VolAEindexado, data = dados, family = gamlss.cens::cens(GG), method = mixed(10, 50))

fit_EXP2 <- update(fit_GG2, family = gamlss.cens::cens(EXP))
```

```{r, echo=FALSE, out.height="100%"}
plot(fit_EXP2)
```