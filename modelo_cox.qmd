# Modelo Cox

{{< include _dados.qmd >}}

Criando o modelo utilizando as mesmas variáveis aplicadas nos modelos paramétricos.
```{r}
library(survival)
library(survminer)

formula = Surv(tempo, Obito) ~  Idade + 
                                ClasseFuncional +
                                FracaoEjecao +
                                RazaoTEI +
                                VolAEindexado

modeloCox = coxph(formula, data = dados, )

summary(modeloCox)
```

Verificando se a suposição de falhas proporcionais é atendida.
```{r}
zph <- cox.zph(modeloCox, transform = "identity")
zph
```

Como a covariável Classe Funcional parece não atende o presuposto  de falhas proporcionais, assim, para dar continuidade na análise utilizando o modelo de Cox, estratificamos a covariável Classe Funcional.

```{r}
formulaEstratificadaPorClasseFuncional = Surv(tempo, Obito) ~  Idade + 
                                strata(ClasseFuncional) +
                                FracaoEjecao +
                                RazaoTEI +
                                VolAEindexado

modeloCoxStrataCF = coxph(formulaEstratificadaPorClasseFuncional, data = dados, )
summary(modeloCoxStrataCF)

```

Avaliando novamente a suposição de falhas proporcionais para diagnostico do modelo.

```{r}
zphEstratificado <- cox.zph(modeloCoxStrataCF, transform = "identity")
zphEstratificado
```

Assim, confirmadas a suposição de falhas proporcionais, verificando também os resíduos de Schoenfeld.

```{r}
#| fig-cap: Resíduos de Schoenfeld
ggcoxzph(zphEstratificado)
```

Nota-se que os resíduos estão centrados centrados na linha horizontal zero.